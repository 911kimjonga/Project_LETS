<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.group.mapper.GroupMemberListMapper">

    <insert id="createGroupMemberList" parameterType="int">
        INSERT INTO STUDY_GROUP_MEMBER_LIST(POSITION, MEMBER_ID, STUDY_GROUP_ID)
        VALUES ('팀장', #{id}, LAST_INSERT_ID())
    </insert>

    <select id="findAllGroupMemberList" parameterType="int">
        SELECT GML.ID             AS ID,
               GML.POSITION       AS POSITION,
               M.NAME             AS NAME,
               M.BIRTHDAY,
               M.GENDER,
               GML.STUDY_GROUP_ID AS STUDYGROUPID,
               M.ID               AS MEMBERID
        FROM STUDY_GROUP_MEMBER_LIST GML
                 JOIN MEMBER M ON GML.MEMBER_ID = M.ID
        WHERE GML.STUDY_GROUP_ID = #{studyGroupId} AND M.STATUS = 'enabled'
        ORDER BY GML.POSITION DESC, M.NAME
    </select>

    <insert id="addMember">
        INSERT INTO STUDY_GROUP_MEMBER_LIST(ID, POSITION, MEMBER_ID, STUDY_GROUP_ID)
        VALUES (NULL, '팀원', #{id}, #{studyGroupId})
    </insert>

    <delete id="removeMember">
        DELETE
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE MEMBER_ID = #{id}
          AND STUDY_GROUP_ID = #{studyGroupId}
    </delete>

    <delete id="removeAllMember">
        DELETE
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE STUDY_GROUP_ID = #{studyGroupId}
    </delete>

    <select id="isGroupMember" parameterType="GroupMemberList">
        SELECT ID,
               POSITION,
               MEMBER_ID,
               STUDY_GROUP_ID
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE MEMBER_ID = #{memberId}
          AND STUDY_GROUP_ID = #{studyGroupId}
    </select>

    <select id="findMyGroupList" parameterType="int" resultType="map">
        SELECT GML.ID             AS ID,
               GML.POSITION       AS POSTITION,
               GML.MEMBER_ID      AS MEMBERID,
               GML.STUDY_GROUP_ID AS STUDYGROUPID,
               SG.NAME            AS NAME,
               SG.TOTAL_COUNT     AS TOTALCOUNT,
               SG.CURRENT_COUNT   AS CURRENTCOUNT,
               SG.SUBJECT         AS SUBJECT,
               SG.IMAGE_PATH      AS IMAGEPATH,
               SGG.NAME           AS SIGUNGUNAME
        FROM STUDY_GROUP_MEMBER_LIST GML
                 JOIN STUDY_GROUP SG ON GML.STUDY_GROUP_ID = SG.ID
                 JOIN SI_GUN_GU SGG ON SG.SI_GUN_GU_ID = SGG.ID
        WHERE GML.MEMBER_ID = #{memberId} AND SG.STATUS = 'enabled'
    </select>

    <select id="readGroupMemberCount" parameterType="int" resultType="boolean">
        SELECT COUNT(ID)
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE POSITION = '팀원' AND STUDY_GROUP_ID = #{studyGroupId}
    </select>

    <select id="readOldestMemberByGroupId" parameterType="int" resultType="int">
        SELECT MIN(ID) AS id
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE POSITION = '팀원'
          AND STUDY_GROUP_ID = #{studyGroupId}
    </select>

    <update id="updateMemberPosition">
        UPDATE STUDY_GROUP_MEMBER_LIST
        SET POSITION = '팀장'
        WHERE MEMBER_ID = #{memberId} AND STUDY_GROUP_ID = #{studyGroupId}
    </update>

    <select id="myStudyCount" parameterType="int" resultType="int">
        SELECT COUNT(ID) AS COUNT
        FROM STUDY_GROUP_MEMBER_LIST
        WHERE MEMBER_ID = #{id}
    </select>

    <select id="findMyGroupListAndPageParams" parameterType="int" resultType="map">
        SELECT  GML.ID             AS ID,
                GML.POSITION       AS POSTITION,
                GML.MEMBER_ID      AS MEMBERID,
                GML.STUDY_GROUP_ID AS STUDYGROUPID,
                SG.NAME            AS NAME,
                SG.TOTAL_COUNT     AS TOTALCOUNT,
                SG.CURRENT_COUNT   AS CURRENTCOUNT,
                SG.SUBJECT         AS SUBJECT,
                SG.IMAGE_PATH      AS IMAGEPATH,
                SGG.NAME           AS SIGUNGUNAME
        FROM STUDY_GROUP_MEMBER_LIST GML
                 JOIN STUDY_GROUP SG ON GML.STUDY_GROUP_ID = SG.ID
                 JOIN SI_GUN_GU SGG ON SG.SI_GUN_GU_ID = SGG.ID
        WHERE MEMBER_ID = #{id} AND SG.STATUS = 'enabled'
        ORDER BY REGDATE DESC
        LIMIT #{pageParams.elementSize} OFFSET #{pageParams.offset}
    </select>

</mapper>