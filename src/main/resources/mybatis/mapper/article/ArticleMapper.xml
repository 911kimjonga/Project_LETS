<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.article.mapper.ArticleMapper">

    <!-- 게시글 생성 -->
    <insert id="create" parameterType="Article">
        INSERT INTO article(ID,
                            TITLE,
                            CONTENT,
                            IMAGE_PATH ,
                            STUDY_GROUP_ID,
                            MEMBER_ID)
        VALUES (ARTICLE_ID_SEQ.NEXTVAL, #{title}, #{content}, #{imagePath, jdbcType=NULL}, #{studyGroupId}, #{memberId})
    </insert>

    <!-- 게시글 수정 -->
    <update id="update" parameterType="Article">
        UPDATE Article
        <set>
            <if test="title != null or title != ''"> title = #{title},</if>
            <if test="content != null or content != ''"> content = #{content},</if>
            <if test="content != null or content != ''"> imagePath = #{modifyImage}</if>
        </set>
        WHERE ID = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <update id="delete" parameterType="int">
        UPDATE Article
        SET status = 'disabled'
        WHERE ID = #{articleId}
    </update>

    <!-- 페이징 계산(검색값 포함)에 필요한 게시글 전체 갯수 -->
    <select id="getCountAll" resultType="int">
        SELECT COUNT(a.id) AS "cnt"
        FROM article a
        JOIN MEMBER m ON a.MEMBER_ID = m.ID
        JOIN STUDY_GROUP sg ON a.STUDY_GROUP_ID = sg.ID
        <where>
            a.STATUS = 'enabled' AND a.STUDY_GROUP_ID = #{groupId}
        <if test="keyword != null">
            AND (
            m.name LIKE '%' || #{keyword} || '%'
            OR a.title LIKE '%' || #{keyword} || '%'
            OR a.content LIKE '%' || #{keyword} || '%'
            )
        </if>
        </where>
    </select>

    <!-- 게시글 목록 (페이징 처리 및 검색값 , 댓글 포함) -->
    <select id="findByPage" resultType="map">
        SELECT
        id,
        title,
        content,
        writer,
        regdate,
        image_path
        FROM (
        SELECT
        id,
        CEIL(rownum / #{pageParams.elementSize}) request_page,
        title,
        content,
        writer,
        regdate,
        image_path
        FROM (
        SELECT
        a.id AS id,
        a.title AS title,
        a.content AS content,
        m.name AS writer,
        TO_CHAR(a.regdate, 'YYYY-MM-DD HH24:MI') AS regdate,
        a.image_path AS image_path
        FROM article a
            JOIN member m ON a.member_id = m.id
        <where>
        a.status = 'enabled' AND a.STUDY_GROUP_ID = #{groupId}
            <if test="pageParams.keyword != null">AND m.name LIKE '%' || #{pageParams.keyword} || '%'</if>
            <if test="pageParams.keyword != null">OR a.title LIKE '%' || #{pageParams.keyword} || '%'</if>
            <if test="pageParams.keyword != null">OR a.content LIKE '%' || #{pageParams.keyword} || '%'</if>
        </where>
        ORDER BY a.regdate DESC
        )
        )
        WHERE request_page = #{pageParams.requestPage}
    </select>


    <!-- 게시글 찾기 -->
    <select id="findById" parameterType="int" resultType="Article">
        SELECT
            ID,
            title,
            content,
            TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') AS regdate,
            IMAGE_PATH,
            STATUS,
            MEMBER_ID
        FROM
            article
        WHERE
            id = #{id}
    </select>

    <!--해당 게시글의 댓글 찾기-->
    <select id="findComment" resultType="map">
        SELECT ac.id,
        ac.content,
        TO_CHAR(ac.regdate, 'YYYY-MM-DD HH24:MI') AS commentRegDate,
        m.NAME AS commentWriter,
        a.ID AS articleId
        FROM article_comment ac
        JOIN article a ON a.id = ac.article_id
        JOIN member m ON m.id = ac.MEMBER_ID
        <where>
            ac.STATUS='enabled'
            <if test="list != null and list.size() > 0">
                AND a.id IN
                <foreach collection="list" item="articleId" open="(" close=")" separator=",">
                    #{articleId}
                </foreach>
            </if>
        </where>
        ORDER BY ac.regdate ASC
    </select>

    <select id="getRecentArticles" resultType="Article">
        SELECT
        id,
        title,
        image_path,
        regdate
        FROM (
        SELECT
        id,
        title,
        image_path,
        TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') AS regdate
        FROM article
        WHERE STUDY_GROUP_ID = #{groupId}
        ORDER BY regdate DESC
        )
        WHERE <![CDATA[ ROWNUM <= 3 ]]>
    </select>


</mapper>