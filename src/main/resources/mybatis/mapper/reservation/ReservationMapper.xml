<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.reservation.mapper.ReservationMapper">

    <insert id="create" parameterType="Reservation">
        INSERT INTO reservation (id, booking_date, start_time, end_time, head_count, member_id, cafe_id, room_id)
        VALUES (reservation_id_seq.NEXTVAL, #{bookingDate}, #{startTime}, #{endTime}, #{headCount}, #{memberId}, #{cafeId}, #{roomId})
    </insert>

    <update id="cancel" parameterType="int">
        UPDATE RESERVATION
        SET status = 'cancel'
        WHERE ID = #{id}
    </update>

    <select id="findById" parameterType="int" resultType="Reservation">
        SELECT ID, TO_CHAR(booking_date, 'yyyy-MM-DD') booking_date, START_TIME, END_TIME, HEAD_COUNT,MEMBER_ID, CAFE_ID, ROOM_ID
        FROM RESERVATION
        WHERE id = #{id}
    </select>

    <select id="findByAll" resultType="Reservation">
        SELECT ID, TO_CHAR(booking_date, 'yyyy-MM-DD') booking_date, START_TIME, END_TIME, HEAD_COUNT,MEMBER_ID, CAFE_ID, ROOM_ID
        FROM RESERVATION
        ORDER BY booking_date DESC
    </select>

    <select id="readCountByMember" resultType="int">
        SELECT COUNT(ID) "count"
        FROM RESERVATION
        <where>
            MEMBER_ID = #{memberId}
            <if test="type != null and type != '' and type != 'all'">AND STATUS = #{type}</if>
        </where>
    </select>

    <select id="findByMember" resultType="map">
        SELECT "id",
               "bookingDate",
               "startTime",
               "endTime",
               "headCount",
               "reservationStatus",
               "cafeName",
               "roomName",
               "paymentType",
               "payStatus"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "bookingDate",
                     "startTime",
                     "endTime",
                     "headCount",
                     "reservationStatus",
                     "cafeName",
                     "roomName",
                     "paymentType",
                     "payStatus"
              FROM (SELECT res.ID                                  "id",
                           TO_CHAR(res.BOOKING_DATE, 'yyyy-MM-DD') "bookingDate",
                           res.START_TIME                          "startTime",
                           res.END_TIME                            "endTime",
                           res.HEAD_COUNT                          "headCount",
                           res.STATUS                              "reservationStatus",
                           caf.NAME                                "cafeName",
                           roo.NAME                                "roomName",
                           pay.PAYMENT_TYPE                        "paymentType",
                           pay.PAY_STATUS                          "payStatus"
                    FROM RESERVATION res
                             JOIN ROOM roo ON res.ROOM_ID = roo.ID
                             JOIN CAFE caf ON res.CAFE_ID = caf.ID
                             JOIN PAYMENT pay ON res.ID = pay.RESERVATION_ID
                    <where>
                        res.MEMBER_ID = #{memberId}
                        <if test="pageParams.type != null and pageParams.type != '' and pageParams.type != 'all'">AND res.STATUS = #{pageParams.type}</if>
                    </where>
                    ORDER BY BOOKING_DATE DESC))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="findCafeResList" parameterType="int" resultType="Reservation">
        SELECT ID,
               TO_CHAR(booking_date, 'yyyy-MM-DD') booking_date,
               START_TIME,
               END_TIME,
               HEAD_COUNT,
               MEMBER_ID,
               ROOM_ID
        FROM RESERVATION
        WHERE cafe_id = #{cafeId}
        ORDER BY booking_date DESC
    </select>

    <select id="findCountMonthRes" parameterType="int" resultType="map">
        SELECT TO_CHAR(BOOKING_DATE, 'YYYY-MM') AS "reservationMonth",
               COUNT(*)                         AS "totalReservations"
        FROM reservation
        WHERE EXTRACT(MONTH FROM BOOKING_DATE) BETWEEN 1 AND 12
          AND cafe_id = #{cafeId}
        GROUP BY TO_CHAR(BOOKING_DATE, 'YYYY-MM')
        ORDER BY TO_CHAR(BOOKING_DATE, 'YYYY-MM')
    </select>

    <select id="findTotalData" parameterType="int" resultType="map">
        SELECT m.name AS "member_name", ro.name AS "room_name", r.head_count AS "headCount", TO_CHAR(r.BOOKING_DATE, 'YYYY/MM/DD') AS "booking_date", r.start_time AS "startTime", r.end_time AS "endTime", (r.end_time - r.start_time) * ro.price AS "totalPrice"
        FROM reservation r
                 JOIN member m ON r.member_id = m.id
                 JOIN room ro ON r.room_id = ro.id
        WHERE r.cafe_id = #{cafeId}
        ORDER BY r.booking_date DESC
    </select>

    <select id="findResInfo" parameterType="int" resultType="map">
    SELECT ca.name AS "cafe_name", ca.image_path,m.name AS "member_name", ro.name AS "room_name", r.head_count, TO_CHAR(r.BOOKING_DATE, 'YYYY/MM/DD') AS "booking_date", r.start_time, r.end_time, ro.price,(r.end_time - r.start_time) * ro.price AS "totalPrice",r.id
    FROM reservation r
    JOIN member m ON r.member_id = m.id
    JOIN room ro ON r.room_id = ro.id
    JOIN cafe ca ON ro.cafe_id = ca.id
    WHERE r.id = #{id}
    </select>

    <select id="findNowRes" parameterType="int" resultType="int">
        SELECT id
        FROM reservation
        WHERE member_id =#{memberId} AND ROWNUM=1
        ORDER BY id DESC
    </select>

    <select id="checkDuplicateReservation" parameterType="map" resultType="int">
        SELECT COUNT(ID)
        FROM reservation
        WHERE ROOM_ID = #{roomId}
        AND BOOKING_DATE = #{bookingDate}
        AND ((START_TIME &lt;= #{endTime} AND END_TIME &gt;= #{endTime})
        OR (START_TIME &lt;= #{startTime} AND END_TIME &gt;= #{startTime})
            OR (START_TIME &gt;= #{startTime} AND END_TIME &lt;= #{endTime}))
    </select>


    <select id="checkDuplicateResTime" resultType="Reservation">
        SELECT ID, START_TIME, END_TIME
        FROM RESERVATION
        WHERE ROOM_ID = #{roomId}
        AND TO_CHAR(BOOKING_DATE, 'YYYY-MM-DD') = #{bookingDate}
    </select>

    <update id="delete">
        UPDATE RESERVATION
        <set>
            STATUS = 'cancel'
        </set>
        WHERE ID = #{id} AND MEMBER_ID = #{memberId}
    </update>

    <select id="readCountByResMonth" parameterType="int" resultType="map">
    SELECT "month",
    COUNT(RESERVATION.booking_date) AS "reserveCount"
    FROM ( SELECT TO_CHAR(TRUNC(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -ROWNUM + 12), 'MM'), 'YYYY-MM') AS "month"
    FROM DUAL
    CONNECT BY LEVEL &lt;= 12 ) MONTHS
    LEFT JOIN RESERVATION ON TO_CHAR(TRUNC(RESERVATION.booking_date, 'MM'), 'YYYY-MM') = MONTHS."month"
    AND RESERVATION.STATUS = 'complete'
    AND RESERVATION.cafe_id = #{cafeId}
    GROUP BY MONTHS."month"
    ORDER BY MONTHS."month"
    </select>

    <select id="readMonthlySales" parameterType="int" resultType="map">
        SELECT "month",SUM(NVL((res.end_time - res.start_time) * ro.price, 0)) AS "monthlyRevenue"
        FROM (
        SELECT TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -ROWNUM + 12), 'MM'), 'YYYY-MM') AS "month"
        FROM DUAL
        CONNECT BY LEVEL &lt;= 12
        ) MONTHS
        LEFT JOIN RESERVATION res ON TO_CHAR(TRUNC(res.booking_date, 'MM'), 'YYYY-MM') = MONTHS."month"
        AND res.STATUS = 'complete'
        AND res.cafe_id = #{cafeId}
        LEFT JOIN ROOM ro ON res.room_id = ro.id
        GROUP BY MONTHS."month"
        ORDER BY MONTHS."month"
    </select>

    <select id="readCountByHost" resultType="int">
    SELECT COUNT(ID) "count"
    FROM RESERVATION
    <where>
        CAFE_ID = #{cafeId}
        <if test="type != null and type != '' and type != 'all'">AND STATUS = #{type}</if>
    </where>
    </select>

    <select id="findByHost" resultType="map">
        SELECT "id",
        "bookingDate",
        "startTime",
        "endTime",
        "headCount",
        "reservationStatus",
        "cafeName",
        "roomName",
        "paymentType",
        "payStatus",
        "memberName",
        "phoneNum",
        "image"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
        "id",
        "bookingDate",
        "startTime",
        "endTime",
        "headCount",
        "reservationStatus",
        "cafeName",
        "roomName",
        "paymentType",
        "payStatus",
        "memberName",
        "phoneNum",
        "image"
        FROM (SELECT res.ID                                  "id",
        TO_CHAR(res.BOOKING_DATE, 'yyyy-MM-DD') "bookingDate",
        res.START_TIME                          "startTime",
        res.END_TIME                            "endTime",
        res.HEAD_COUNT                          "headCount",
        res.STATUS                              "reservationStatus",
        caf.NAME                                "cafeName",
        roo.NAME                                "roomName",
        pay.PAYMENT_TYPE                        "paymentType",
        pay.PAY_STATUS                          "payStatus",
        m.NAME                                  "memberName",
        m.PHONE_NUMBER                          "phoneNum",
        roo.IMAGE_PATH                          "image"
        FROM RESERVATION res
        JOIN ROOM roo ON res.ROOM_ID = roo.ID
        JOIN CAFE caf ON res.CAFE_ID = caf.ID
        JOIN PAYMENT pay ON res.ID = pay.RESERVATION_ID
        JOIN MEMBER m ON res.MEMBER_ID = m.ID
        <where>
            res.CAFE_ID = #{cafeId}
            <if test="pageParams.type != null and pageParams.type != '' and pageParams.type != 'all'">AND res.STATUS = #{pageParams.type}</if>
        </where>
        ORDER BY BOOKING_DATE DESC))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>
</mapper>