<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.reservation.mapper.ReservationMapper">

    <insert id="create" parameterType="Reservation">
        INSERT INTO reservation (id, booking_date, start_time, end_time, head_count, member_id, cafe_id, room_id)
        VALUES (reservation_id_seq.NEXTVAL, #{bookingDate}, #{startTime}, #{endTime}, #{headCount}, #{memberId},
                #{cafeId}, #{roomId})
    </insert>

    <update id="cancel" parameterType="int">
        UPDATE RESERVATION
        SET STATUS = 'cancel'
        WHERE ID = #{id}
    </update>

    <select id="findById" parameterType="int" resultType="Reservation">
        SELECT ID,
               TO_CHAR(booking_date, 'yyyy-MM-dd') booking_date,
               START_TIME,
               END_TIME,
               HEAD_COUNT,
               MEMBER_ID,
               CAFE_ID,
               ROOM_ID
        FROM RESERVATION
        WHERE id = #{id}
    </select>

    <select id="findByAll" resultType="Reservation">
        SELECT ID,
               TO_CHAR(booking_date, 'yyyy-MM-dd') booking_date,
               START_TIME,
               END_TIME,
               HEAD_COUNT,
               MEMBER_ID,
               CAFE_ID,
               ROOM_ID
        FROM RESERVATION
        ORDER BY booking_date DESC
    </select>

    <select id="readCountByMember" resultType="int">
        SELECT COUNT(ID) "count"
        FROM RESERVATION
        <where>
            MEMBER_ID = #{memberId}
            <if test="type != null and type != '' and type != 'all'">AND STATUS = #{type}</if>
        </where>
    </select>

    <select id="findByMember" resultType="map">
        SELECT "id",
               "bookingDate",
               "startTime",
               "endTime",
               "headCount",
               "reservationStatus",
               "cafeName",
               "roomName",
               "paymentType",
               "payStatus"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "bookingDate",
                     "startTime",
                     "endTime",
                     "headCount",
                     "reservationStatus",
                     "cafeName",
                     "roomName",
                     "paymentType",
                     "payStatus"
              FROM (SELECT res.ID                                   "id",
                           TO_CHAR(res.BOOKING_DATE, 'yyyy-MM-dd')  "bookingDate",
                           res.START_TIME                           "startTime",
                           res.END_TIME                             "endTime",
                           res.HEAD_COUNT                           "headCount",
                           res.STATUS                               "reservationStatus",
                           c.NAME                                   "cafeName",
                           roo.NAME                                 "roomName",
                           p.PAYMENT_TYPE                           "paymentType",
                           p.PAY_STATUS                             "payStatus"
                    FROM RESERVATION res
                            JOIN ROOM roo ON res.ROOM_ID = roo.ID
                            JOIN CAFE c ON res.CAFE_ID = c.ID
                            JOIN PAYMENT p ON res.ID = p.RESERVATION_ID
                    <where>
                        res.MEMBER_ID = #{memberId}
                        <if test="pageParams.type != null and pageParams.type != '' and pageParams.type != 'all'">
                            AND res.STATUS = #{pageParams.type}
                        </if>
                    </where>
                    ORDER BY BOOKING_DATE DESC))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="findCafeResList" parameterType="int" resultType="Reservation">
        SELECT ID,
               TO_CHAR(booking_date, 'yyyy-MM-dd') booking_date,
               START_TIME,
               END_TIME,
               HEAD_COUNT,
               MEMBER_ID,
               ROOM_ID
        FROM RESERVATION
        WHERE cafe_id = #{cafeId}
        ORDER BY booking_date DESC
    </select>

    <select id="findCountMonthRes" parameterType="int" resultType="map">
        SELECT TO_CHAR(BOOKING_DATE, 'yyyy-MM') "reservationMonth",
               COUNT(*)                         "totalReservations"
        FROM reservation
        WHERE EXTRACT(MONTH FROM BOOKING_DATE) BETWEEN 1 AND 12
          AND cafe_id = #{cafeId}
        GROUP BY TO_CHAR(BOOKING_DATE, 'yyyy-MM')
        ORDER BY TO_CHAR(BOOKING_DATE, 'yyyy-MM')
    </select>

    <select id="findTotalData" parameterType="int" resultType="map">
        SELECT m.NAME                                      "member_name",
               roo.NAME                                    "room_name",
               res.HEAD_COUNT                              "headCount",
               TO_CHAR(res.BOOKING_DATE, 'YYYY/MM/DD')     "booking_date",
               res.START_TIME                              "startTime",
               res.END_TIME                                "endTime",
               (res.END_TIME - res.START_TIME) * roo.PRICE "totalPrice"
        FROM reservation res
                 JOIN member m ON res.MEMBER_ID = m.ID
                 JOIN room roo ON res.ROOM_ID = roo.ID
        WHERE res.CAFE_ID = #{cafeId}
          AND res.STATUS != 'cancel'
        ORDER BY res.booking_date DESC
    </select>

    <select id="findResInfo" parameterType="int" resultType="map">
        SELECT c.NAME                                      "cafe_name",
               c.ID                                        "cafeId",
               c.IMAGE_PATH,
               m.NAME                                      "member_name",
               roo.NAME                                    "room_name",
               res.HEAD_COUNT,
               TO_CHAR(res.BOOKING_DATE, 'YYYY/MM/DD')     "booking_date",
               res.START_TIME,
               res.END_TIME,
               roo.PRICE,
               (res.END_TIME - res.START_TIME) * roo.PRICE "totalPrice",
               res.ID,
               res.MEMBER_ID                               "memberId"
        FROM RESERVATION res
                 JOIN MEMBER m ON res.MEMBER_ID = m.ID
                 JOIN ROOM roo ON res.ROOM_ID = roo.ID
                 JOIN CAFE c ON roo.CAFE_ID = c.ID
        WHERE res.ID = #{id}
          AND res.MEMBER_ID = #{memberId}
    </select>

    <select id="findNowRes" parameterType="int" resultType="int">
        SELECT id
        FROM reservation
        WHERE member_id = #{memberId}
          AND ROWNUM = 1
        ORDER BY id DESC
    </select>

    <select id="checkDuplicateReservation" parameterType="map" resultType="int">
        SELECT COUNT(ID)
        FROM reservation
        WHERE ROOM_ID = #{roomId}
          AND TO_CHAR(BOOKING_DATE, 'yyyy-MM-dd') = #{bookingDate}
          AND ((START_TIME &lt;= #{endTime} AND END_TIME &gt;= #{endTime})
            OR (START_TIME &lt;= #{startTime} AND END_TIME &gt;= #{startTime})
            OR (START_TIME &gt;= #{startTime} AND END_TIME &lt;= #{endTime}))
    </select>


    <select id="checkDuplicateResTime" resultType="Reservation">
        SELECT ID, START_TIME, END_TIME
        FROM RESERVATION
        WHERE ROOM_ID = #{roomId}
          AND TO_CHAR(BOOKING_DATE, 'yyyy-MM-dd') = #{bookingDate}
          AND STATUS != 'cancel'
    </select>

    <update id="delete">
        UPDATE RESERVATION
        <set>
            STATUS = 'cancel'
        </set>
        WHERE ID = #{id} AND MEMBER_ID = #{memberId}
    </update>

    <select id="readCountByResMonth" parameterType="int" resultType="map">
        SELECT "month",
               COUNT(RESERVATION.booking_date) "reserveCount"
        FROM (SELECT TO_CHAR(TRUNC(ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -ROWNUM + 12), 'MM'), 'yyyy-MM') "month"
              FROM DUAL CONNECT BY LEVEL &lt;= 12) MONTHS
                 LEFT JOIN RESERVATION ON TO_CHAR(TRUNC(RESERVATION.booking_date, 'MM'), 'yyyy-MM') = MONTHS."month"
            AND RESERVATION.STATUS = 'complete'
            AND RESERVATION.cafe_id = #{cafeId}
        GROUP BY MONTHS."month"
        ORDER BY MONTHS."month"
    </select>

    <select id="readMonthlySales" parameterType="int" resultType="map">
        SELECT "month", SUM(NVL((res.end_time - res.start_time) * ro.price, 0)) AS "monthlyRevenue"
        FROM (SELECT TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -ROWNUM + 12), 'MM'), 'yyyy-MM') AS "month"
              FROM DUAL CONNECT BY LEVEL &lt;= 12) MONTHS
                 LEFT JOIN RESERVATION res ON TO_CHAR(TRUNC(res.booking_date, 'MM'), 'yyyy-MM') = MONTHS."month"
            AND res.STATUS = 'complete'
            AND res.cafe_id = #{cafeId}
                 LEFT JOIN ROOM ro ON res.room_id = ro.id
        GROUP BY MONTHS."month"
        ORDER BY MONTHS."month"
    </select>

    <select id="readCountByHost" resultType="int">
        SELECT COUNT(ID) "count"
        FROM RESERVATION
        <where>
            CAFE_ID = #{cafeId}
            <if test="type != null and type != '' and type != 'all'">AND STATUS = #{type}</if>
        </where>
    </select>

    <select id="findByHost" resultType="map">
        SELECT "id",
               "bookingDate",
               "startTime",
               "endTime",
               "headCount",
               "reservationStatus",
               "cafeName",
               "roomName",
               "paymentType",
               "payStatus",
               "memberName",
               "phoneNum",
               "image"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "bookingDate",
                     "startTime",
                     "endTime",
                     "headCount",
                     "reservationStatus",
                     "cafeName",
                     "roomName",
                     "paymentType",
                     "payStatus",
                     "memberName",
                     "phoneNum",
                     "image"
              FROM (SELECT res.ID "id",
                           TO_CHAR(res.BOOKING_DATE, 'yyyy-MM-dd') "bookingDate",
                           res.START_TIME "startTime",
                           res.END_TIME "endTime",
                           res.HEAD_COUNT "headCount",
                           res.STATUS "reservationStatus",
                           c.NAME "cafeName",
                           roo.NAME "roomName",
                           p.PAYMENT_TYPE "paymentType",
                           p.PAY_STATUS "payStatus",
                           m.NAME "memberName",
                           m.PHONE_NUMBER "phoneNum",
                           roo.IMAGE_PATH "image"
                    FROM RESERVATION res
                            JOIN ROOM roo ON res.ROOM_ID = roo.ID
                            JOIN CAFE c ON res.CAFE_ID = c.ID
                            JOIN PAYMENT p ON res.ID = p.RESERVATION_ID
                            JOIN MEMBER m ON res.MEMBER_ID = m.ID
                    <where>
                        res.CAFE_ID = #{cafeId}
                        <if test="pageParams.type != null and pageParams.type != '' and pageParams.type != 'all'">AND res.STATUS =
                            #{pageParams.type}
                        </if>
                    </where>
                    ORDER BY BOOKING_DATE DESC))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="readTotalRes" parameterType="int" resultType="int">
        SELECT COUNT(res.status) AS "count"
        FROM RESERVATION res
                 JOIN MEMBER m ON res.MEMBER_ID = m.ID
                 JOIN CAFE c ON res.CAFE_ID = c.ID
        WHERE res.status = 'complete'
          AND c.ID = #{cafeId}
    </select>
</mapper>