<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.review.mapper.ReviewMapper">

    <insert id="create" parameterType="Review">
        INSERT INTO REVIEW(ID, CONTENT, RATING, RESERVATION_ID, MEMBER_ID)
        VALUES (REVIEW_ID_SEQ.NEXTVAL, #{content}, #{rating}, #{reservationId}, #{memberId})
    </insert>

    <select id="readAll" resultType="Map">
        SELECT rev.ID                                "id",
               rev.CONTENT                           "content",
               rev.RATING                            "rating",
               TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
               rev.STATUS                            "status",
               caf.NAME                              "cafeName",
               roo.NAME                              "roomName",
               res.BOOKING_DATE                      "bookingDate"
        FROM REVIEW rev
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf on res.CAFE_ID = caf.ID
                 JOIN ROOM roo on res.ROOM_ID = roo.ID
        ORDER BY WRITE_DATE DESC
    </select>

    <select id="readByCafe" parameterType="int" resultType="Map">
        SELECT rev.ID                                "id",
               rev.CONTENT                           "content",
               rev.RATING                            "rating",
               TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
               mem.NAME                              "writerName",
               roo.NAME                              "roomName",
               res.ID                                "reservationId"
        FROM REVIEW rev
                 JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf on res.CAFE_ID = caf.ID
                 JOIN ROOM roo on res.ROOM_ID = roo.ID
        WHERE rev.STATUS = 'enabled'
          AND caf.ID = #{cafeId}
          AND mem.TYPE = 'guest'
        ORDER BY WRITE_DATE DESC
    </select>

    <select id="readCountByMember" parameterType="int" resultType="int">
        SELECT COUNT(r.ID) "count"
        FROM REVIEW r
                 JOIN MEMBER m on r.MEMBER_ID = m.ID
        WHERE r.STATUS = 'enabled'
          AND m.ID = #{memberId}
    </select>

    <select id="readByMember" resultType="Map">
        SELECT "id",
               "content",
               "rating",
               "writeDate",
               "cafeName",
               "roomName",
               "roomImage",
               "reservationId"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "content",
                     "rating",
                     "writeDate",
                     "cafeName",
                     "roomName",
                     "roomImage",
                     "reservationId"
              FROM (SELECT rev.ID                                "id",
                           rev.CONTENT                           "content",
                           rev.RATING                            "rating",
                           TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
                           caf.NAME                              "cafeName",
                           roo.NAME                              "roomName",
                           roo.IMAGE_PATH                        "roomImage",
                           res.ID                                "reservationId"
                    FROM REVIEW rev
                             JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                             JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                             JOIN CAFE caf on res.CAFE_ID = caf.ID
                             JOIN ROOM roo on res.ROOM_ID = roo.ID
                    WHERE rev.STATUS = 'enabled'
                      AND mem.ID = #{memberId}
                    <if test="pageParams.type == null or pageParams.type == 'latest'">ORDER BY res.BOOKING_DATE DESC</if>
                    <if test="pageParams.type == 'oldest'">ORDER BY res.BOOKING_DATE ASC</if>))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="readHostCommentByResId" parameterType="int" resultType="Map">
        SELECT rev.CONTENT                           "commentContent",
               TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "commentWriteDate"
        FROM REVIEW rev
                 JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf on res.CAFE_ID = caf.ID
                 JOIN ROOM roo on res.ROOM_ID = roo.ID
        WHERE rev.STATUS = 'enabled'
          AND res.ID = #{reservationId}
          AND mem.TYPE = 'host'
    </select>

    <select id="readCountByReservationId" parameterType="int" resultType="boolean">
        SELECT COUNT(rev.ID)
        FROM REVIEW rev
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
        WHERE rev.STATUS = 'enabled'
          AND res.ID = #{reservationId}
    </select>

    <update id="update" parameterType="Review">
        UPDATE REVIEW
        <set>
            <if test="content != null and content != ''">CONTENT = #{content},</if>
            <if test="rating != null or rating != ''">RATING = #{rating},</if>
        </set>
        WHERE ID = #{id}
    </update>

    <update id="disabled" parameterType="int">
        UPDATE REVIEW
        SET status = 'disabled'
        WHERE ID = #{id}
    </update>

</mapper>