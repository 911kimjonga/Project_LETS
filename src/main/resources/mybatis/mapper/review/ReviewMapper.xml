<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vj.lets.domain.review.mapper.ReviewMapper">

    <insert id="create" parameterType="Review">
        INSERT INTO REVIEW(ID, CONTENT, RATING, RESERVATION_ID, MEMBER_ID)
        VALUES (REVIEW_ID_SEQ.NEXTVAL, #{content}, #{rating}, #{reservationId}, #{memberId})
    </insert>

    <select id="readAll" resultType="Map">
        SELECT rev.ID                                "id",
               rev.CONTENT                           "content",
               rev.RATING                            "rating",
               TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
               rev.STATUS                            "status",
               caf.NAME                              "cafeName",
               roo.NAME                              "roomName",
               res.BOOKING_DATE                      "bookingDate"
        FROM REVIEW rev
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf on res.CAFE_ID = caf.ID
                 JOIN ROOM roo on res.ROOM_ID = roo.ID
        ORDER BY WRITE_DATE DESC
    </select>

    <select id="readByCafe" resultType="Map">
        SELECT  "id",
                "content",
                "rating",
                "writeDate",
                "writerName",
                "writerId",
                "writerImagePath",
                "roomName",
                "reservationId"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "content",
                     "rating",
                     "writeDate",
                     "writerName",
                     "writerId",
                     "writerImagePath",
                     "roomName",
                     "reservationId"
              FROM (
                       SELECT
                           rev.ID                                "id",
                           rev.CONTENT                           "content",
                           rev.RATING                            "rating",
                           TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
                           mem.NAME                              "writerName",
                           mem.EMAIL                             "writerId",
                           mem.IMAGE_PATH                        "writerImagePath",
                           roo.NAME                              "roomName",
                           res.ID                                "reservationId"
                       FROM REVIEW rev
                                JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                                JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                                JOIN CAFE caf on res.CAFE_ID = caf.ID
                                JOIN ROOM roo on res.ROOM_ID = roo.ID
                       WHERE rev.STATUS = 'enabled'
                         AND caf.ID = #{cafeId}
                         AND mem.TYPE = 'guest'
                       ORDER BY WRITE_DATE DESC))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="countByReviewRating" parameterType="int" resultType="map">
        SELECT ROUND(COUNT(DECODE(RATING,5,1))/COUNT(RATING)*100,-1) "five",
               ROUND(COUNT(DECODE(RATING,4,1))/COUNT(RATING)*100,-1) "four",
               ROUND(COUNT(DECODE(RATING,3,1))/COUNT(RATING)*100,-1) "three",
               ROUND(COUNT(DECODE(RATING,2,1))/COUNT(RATING)*100,-1) "two",
               ROUND(COUNT(DECODE(RATING,1,1))/COUNT(RATING)*100,-1) "one"
        FROM REVIEW rv
                 JOIN RESERVATION res ON res.ID = rv.RESERVATION_ID
        WHERE CAFE_ID = #{cafeId}
          AND RATING != 0
    </select>

    <select id="readCountByMember" parameterType="int" resultType="int">
        SELECT COUNT(r.ID) "count"
        FROM REVIEW r
                 JOIN MEMBER m on r.MEMBER_ID = m.ID
        WHERE r.STATUS = 'enabled'
          AND m.ID = #{memberId}
    </select>

    <select id="readByMember" resultType="Map">
        SELECT "id",
               "content",
               "rating",
               "writeDate",
               "cafeName",
               "roomName",
               "roomImage",
               "reservationId"
        FROM (SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
                     "id",
                     "content",
                     "rating",
                     "writeDate",
                     "cafeName",
                     "roomName",
                     "roomImage",
                     "reservationId"
              FROM (SELECT rev.ID                                "id",
                           rev.CONTENT                           "content",
                           rev.RATING                            "rating",
                           TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "writeDate",
                           caf.NAME                              "cafeName",
                           roo.NAME                              "roomName",
                           roo.IMAGE_PATH                        "roomImage",
                           res.ID                                "reservationId"
                    FROM REVIEW rev
                             JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                             JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                             JOIN CAFE caf on res.CAFE_ID = caf.ID
                             JOIN ROOM roo on res.ROOM_ID = roo.ID
                    WHERE rev.STATUS = 'enabled'
                      AND mem.ID = #{memberId}
                    <if test="pageParams.type == null or pageParams.type == 'latest'">ORDER BY res.BOOKING_DATE DESC</if>
                    <if test="pageParams.type == 'oldest'">ORDER BY res.BOOKING_DATE ASC</if>))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="readHostCommentByResId" parameterType="int" resultType="Map">
        SELECT rev.CONTENT                           "commentContent",
               TO_CHAR(rev.WRITE_DATE, 'yyyy-MM-DD') "commentWriteDate",
               rev.ID                                "commentRevId"
        FROM REVIEW rev
                 JOIN MEMBER mem on rev.MEMBER_ID = mem.ID
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf on res.CAFE_ID = caf.ID
                 JOIN ROOM roo on res.ROOM_ID = roo.ID
        WHERE rev.STATUS = 'enabled'
          AND res.ID = #{reservationId}
          AND mem.TYPE = 'host'
    </select>

    <select id="readCountByReservationId" parameterType="int" resultType="boolean">
        SELECT COUNT(rev.ID)
        FROM REVIEW rev
                 JOIN RESERVATION res on res.ID = rev.RESERVATION_ID
        WHERE rev.STATUS = 'enabled'
          AND res.ID = #{reservationId}
    </select>

    <select id="readCountByHost" parameterType="int" resultType="int">
        SELECT COUNT(r.ID) AS "count"
        FROM REVIEW r
                 INNER JOIN RESERVATION res ON r.reservation_id = res.ID
                 INNER JOIN CAFE c ON res.cafe_id = c.ID
                 INNER JOIN MEMBER m ON r.member_id = m.id
        WHERE r.STATUS = 'enabled'
          AND c.ID = #{cafeId}
          AND m.type='guest'
    </select>

    <select id="readByHost" parameterType="int" resultType="Map">
        SELECT "id",
        "content",
        "rating",
        "writeDate",
        "cafeName",
        "roomName",
        "roomImage",
        "reservationId",
        "guestProfile",
        "reserveName",
        "reserveId",
        "memberType",
        "reviewCount"
        FROM (
        SELECT CEIL(ROWNUM / #{pageParams.elementSize}) "request_page",
        "id",
        "content",
        "rating",
        "writeDate",
        "cafeName",
        "roomName",
        "roomImage",
        "reservationId",
        "guestProfile",
        "reserveName",
        "reserveId",
        "memberType",
        "reviewCount"
        FROM (
        SELECT rev.ID "id",
        rev.CONTENT "content",
        rev.RATING "rating",
        TO_CHAR(rev.WRITE_DATE, 'YYYY-MM-DD') "writeDate",
        caf.NAME "cafeName",
        roo.NAME "roomName",
        roo.IMAGE_PATH "roomImage",
        res.ID "reservationId",
        mem.IMAGE_PATH "guestProfile",
        mem.Name "reserveName",
        mem.email "reserveId",
        mem.type "memberType",
        (SELECT COUNT(reservation_ID)
        FROM REVIEW
        WHERE STATUS = 'enabled'
        AND reservation_ID = res.ID) "reviewCount"
        FROM REVIEW rev
        JOIN MEMBER mem ON rev.MEMBER_ID = mem.ID
        JOIN RESERVATION res ON res.ID = rev.RESERVATION_ID
        JOIN CAFE caf ON res.CAFE_ID = caf.ID
        JOIN ROOM roo ON res.ROOM_ID = roo.ID
        WHERE rev.STATUS = 'enabled'
        AND caf.ID = #{cafeId}
        AND res.STATUS != 'cancel'
        AND mem.TYPE !='host'
        <if test="pageParams.type == null or pageParams.type == 'latest'">ORDER BY res.BOOKING_DATE ASC</if>
        <if test="pageParams.type == 'oldest'">ORDER BY res.BOOKING_DATE DESC</if>))
        WHERE "request_page" = #{pageParams.requestPage}
    </select>

    <select id="readCountByReview" parameterType="int" resultType="int">
    SELECT COUNT(reservation_ID) AS "count"
    FROM REVIEW
    WHERE STATUS = 'enabled'
    AND reservation_ID = #{reservationId}
    </select>

    <select id="readTodayReview" parameterType="int" resultType="int">
        SELECT COUNT(write_date) AS "count"
        FROM REVIEW rev
                 JOIN MEMBER mem ON rev.MEMBER_ID = mem.ID
                 JOIN RESERVATION res ON res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf ON res.CAFE_ID = caf.ID
        WHERE rev.status = 'enabled'
          AND caf.ID = #{cafeId}
          AND mem.type = 'guest'
          AND to_char(write_date) = to_char(sysdate)
    </select>

    <update id="update" parameterType="Review">
        UPDATE REVIEW
        <set>
            <if test="content != null and content != ''">CONTENT = #{content},</if>
            <if test="rating != null or rating != ''">RATING = #{rating},</if>
        </set>
        WHERE ID = #{id}
    </update>

    <select id="callReviewComment" parameterType="int" resultType="string">
        SELECT rev.content
        FROM review rev
                 JOIN MEMBER mem ON rev.MEMBER_ID = mem.ID
                 JOIN RESERVATION res ON res.ID = rev.RESERVATION_ID
                 JOIN CAFE caf ON res.CAFE_ID = caf.ID
                 JOIN ROOM roo ON res.ROOM_ID = roo.ID
        WHERE rev.STATUS = 'enabled'
          AND rev.reservation_id = #{reservationId}
          AND rev.member_id = #{memberId}
    </select>

    <update id="disabled" parameterType="int">
        UPDATE REVIEW
        SET status = 'disabled'
        WHERE ID = #{id}
    </update>



</mapper>